extends ../layout

block content
  .container-fluid
    .row.mb-4
      .col-lg-8
        h1.h2.mb-1
          i.fas.fa-users.me-2.text-info
          | Staff Management
        p.text-muted Manage staff members, roles, and permissions
      
      .col-lg-4.text-lg-end
        .btn-group
          a.btn.btn-success(href="/admin/staff/new")
            i.fas.fa-user-plus.me-2
            | Add New Staff
          a.btn.btn-outline-primary(href="/admin/films") Film Management

    // Success/Error Messages
    if success && success.length > 0
      .alert.alert-success.alert-dismissible.fade.show
        i.fas.fa-check-circle.me-2
        | #{success}
        button.btn-close(type="button", data-bs-dismiss="alert")

    if error && error.length > 0
      .alert.alert-danger.alert-dismissible.fade.show
        i.fas.fa-exclamation-triangle.me-2
        | #{error}
        button.btn-close(type="button", data-bs-dismiss="alert")

    // Staff List
    if staff && staff.length > 0
      .row.mb-4
        .col-12
          .alert.alert-info
            i.fas.fa-info-circle.me-2
            strong Staff Management Info:
            |  Active staff can log in and perform their duties. Deactivated staff lose access but their data is preserved for reactivation. Only admins can manage staff accounts.
      
      .row
        each member in staff
          .col-lg-6.col-xl-4.mb-4
            .card.h-100(class=member.active ? '' : 'border-secondary')
              .position-relative
                if !member.active
                  .position-absolute.top-0.end-0.m-2
                    .badge.bg-secondary Inactive
                else if member.role === 'admin'
                  .position-absolute.top-0.end-0.m-2
                    .badge.bg-danger Admin
                else if member.role === 'staff'
                  .position-absolute.top-0.end-0.m-2
                    .badge.bg-info Staff

              .card-header
                h5.card-title.mb-1 #{member.first_name} #{member.last_name}
                p.card-text.text-muted.small.mb-0 #{member.email}
              
              .card-body
                .row.mb-3
                  .col-6
                    .small.text-muted Role
                    .fw-bold.text-capitalize #{member.role || 'Staff'}
                  .col-6
                    .small.text-muted Username
                    .fw-bold #{member.username || 'Not set'}
                
                if member.created_at
                  .mb-3
                    .small.text-muted Created
                    .small #{new Date(member.created_at).toLocaleDateString()}
                
                // Action Buttons
                .d-flex.gap-2.mt-3
                  if member.active
                    form.d-inline(method="POST", action=`/admin/staff/${member.staff_id}/deactivate`)
                      button.btn.btn-outline-danger.btn-sm(type="submit")
                        i.fas.fa-user-times.me-1
                        | Deactivate
                  else
                    form.d-inline(method="POST", action=`/admin/staff/${member.staff_id}/activate`)
                      button.btn.btn-outline-success.btn-sm(type="submit")
                        i.fas.fa-user-check.me-1
                        | Activate
    else
      .row
        .col-12
          .card
            .card-body.text-center.py-5
              .mb-4
                i.fas.fa-users.fa-4x.text-muted
              h4.text-muted No Staff Found
              p.text-muted.mb-4 No staff members are currently in the system.
              
              a.btn.btn-success(href="/admin/staff/new")
                i.fas.fa-user-plus.me-2
                | Add New Staff

  script.
    document.addEventListener('DOMContentLoaded', function() {
      // Add confirmation dialog for staff deactivation
      const deactivateForms = document.querySelectorAll('form[action*="/deactivate"]');
      deactivateForms.forEach(form => {
        form.addEventListener('submit', function(e) {
          const staffName = this.closest('.card').querySelector('.card-title').textContent.trim();
          const confirmed = confirm(`Are you sure you want to deactivate ${staffName}? They will lose access to the system.`);
          
          if (!confirmed) {
            e.preventDefault();
            return false;
          }
        });
      });
      
      // Add confirmation dialog for staff activation
      const activateForms = document.querySelectorAll('form[action*="/activate"]');
      activateForms.forEach(form => {
        form.addEventListener('submit', function(e) {
          const staffName = this.closest('.card').querySelector('.card-title').textContent.trim();
          const confirmed = confirm(`Are you sure you want to reactivate ${staffName}? They will regain access to the system.`);
          
          if (!confirmed) {
            e.preventDefault();
            return false;
          }
        });
      });
    });