# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - MoviezExpressRentals

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: npm install, build
        run: |
          npm install
          npm run build --if-present

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .
  
  E2E-tests:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true  # Don't fail the workflow if tests fail
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sakila
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          
      - name: Install dependencies
        run: npm install
        
      - name: Wait for MySQL to be ready
        run: |
          for i in {30..0}; do
            if mysqladmin ping -h"127.0.0.1" -P3306 -uroot -proot --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... ($i)"
            sleep 2
          done
          
      - name: Set up test database
        run: |
          # Download and set up Sakila sample database
          curl -L https://downloads.mysql.com/docs/sakila-db.tar.gz | tar xz
          mysql -h127.0.0.1 -P3306 -uroot -proot sakila < sakila-db/sakila-schema.sql
          mysql -h127.0.0.1 -P3306 -uroot -proot sakila < sakila-db/sakila-data.sql
          echo "Sakila database setup complete"
        
      - name: Run Cypress tests with server
        env:
          # Database connection
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: root
          DB_DATABASE: sakila
          DB_PORT: 3306
          # App environment
          NODE_ENV: test
          SESSION_SECRET: test-session-secret-key-for-ci
          PORT: 3000
          # Cypress test user credentials
          CYPRESS_ADMIN_USERNAME: admin
          CYPRESS_ADMIN_PASSWORD: admin123
          CYPRESS_STAFF_USERNAME: staff
          CYPRESS_STAFF_PASSWORD: staff123
          CYPRESS_CUSTOMER_USERNAME: customer
          CYPRESS_CUSTOMER_PASSWORD: customer123
        run: npx start-server-and-test start http://localhost:3000 cypress:run
        
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()  # Always upload even if tests fail
        with:
          name: cypress-results
          path: |
            cypress/screenshots/
            cypress/videos/
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: [build, E2E-tests]  # Wait for both jobs
    if: always()  # Deploy even if tests fail
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_596D9840D89343ADB7EC63B8EE7E17FE }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F6020929AC844389A9259AC985A7B796 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6B696478A01E414CA68E21E9FB909EC7 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'MoviezExpressRentals'
          slot-name: 'Production'
          package: .
          